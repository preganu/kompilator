digraph {
n0 [label="Goal:"];
n1 [label="MainClass:BinarySearch"];
n2 [label="String[]:a"];
n1 -> n2
n3 [label="Statement:sys.out"];
n4 [label="Expression list:Start"];
n5 [label="Expression new identifier:BS"];
n4 -> n5
n6 [label="<INTEGER_LITERAL>:20"];
n4 -> n6
n3 -> n4
n1 -> n3
n0 -> n1
n7 [label="Classdeclarationlist:"];
n8 [label="ClassDeclaration:BS"];
n9 [label="Vardeclarationlist:"];
n10 [label="VarDeclaration:number"];
n11 [label="Int[]:"];
n10 -> n11
n9 -> n10
n12 [label="VarDeclaration:size"];
n13 [label="<INTEGER_LITERAL>:"];
n12 -> n13
n9 -> n12
n8 -> n9
n14 [label="MethodDeclarationlist:"];
n15 [label="MethodDeclaration param:Start"];
n16 [label="<INTEGER_LITERAL>:"];
n15 -> n16
n17 [label="parameter list:sz"];
n18 [label="<INTEGER_LITERAL>:"];
n17 -> n18
n15 -> n17
n19 [label="Vardeclarationlist:"];
n20 [label="VarDeclaration:aux01"];
n21 [label="<INTEGER_LITERAL>:"];
n20 -> n21
n19 -> n20
n22 [label="VarDeclaration:aux02"];
n23 [label="<INTEGER_LITERAL>:"];
n22 -> n23
n19 -> n22
n15 -> n19
n24 [label="Statementlist:"];
n25 [label="Statement assign:aux01"];
n26 [label="Expression list:Init"];
n27 [label="Expression:THIS"];
n26 -> n27
n28 [label="identifier:sz"];
n26 -> n28
n25 -> n26
n24 -> n25
n29 [label="Statement assign:aux02"];
n30 [label="Expression.identifier:Print"];
n31 [label="Expression:THIS"];
n30 -> n31
n29 -> n30
n24 -> n29
n32 [label="Statement:if"];
n33 [label="Expression list:Search"];
n34 [label="Expression:THIS"];
n33 -> n34
n35 [label="<INTEGER_LITERAL>:8"];
n33 -> n35
n32 -> n33
n36 [label="Statement:sys.out"];
n37 [label="<INTEGER_LITERAL>:1"];
n36 -> n37
n32 -> n36
n38 [label="Statement:sys.out"];
n39 [label="<INTEGER_LITERAL>:0"];
n38 -> n39
n32 -> n38
n24 -> n32
n40 [label="Statement:if"];
n41 [label="Expression list:Search"];
n42 [label="Expression:THIS"];
n41 -> n42
n43 [label="<INTEGER_LITERAL>:19"];
n41 -> n43
n40 -> n41
n44 [label="Statement:sys.out"];
n45 [label="<INTEGER_LITERAL>:1"];
n44 -> n45
n40 -> n44
n46 [label="Statement:sys.out"];
n47 [label="<INTEGER_LITERAL>:0"];
n46 -> n47
n40 -> n46
n24 -> n40
n48 [label="Statement:if"];
n49 [label="Expression list:Search"];
n50 [label="Expression:THIS"];
n49 -> n50
n51 [label="<INTEGER_LITERAL>:20"];
n49 -> n51
n48 -> n49
n52 [label="Statement:sys.out"];
n53 [label="<INTEGER_LITERAL>:1"];
n52 -> n53
n48 -> n52
n54 [label="Statement:sys.out"];
n55 [label="<INTEGER_LITERAL>:0"];
n54 -> n55
n48 -> n54
n24 -> n48
n56 [label="Statement:if"];
n57 [label="Expression list:Search"];
n58 [label="Expression:THIS"];
n57 -> n58
n59 [label="<INTEGER_LITERAL>:21"];
n57 -> n59
n56 -> n57
n60 [label="Statement:sys.out"];
n61 [label="<INTEGER_LITERAL>:1"];
n60 -> n61
n56 -> n60
n62 [label="Statement:sys.out"];
n63 [label="<INTEGER_LITERAL>:0"];
n62 -> n63
n56 -> n62
n24 -> n56
n64 [label="Statement:if"];
n65 [label="Expression list:Search"];
n66 [label="Expression:THIS"];
n65 -> n66
n67 [label="<INTEGER_LITERAL>:37"];
n65 -> n67
n64 -> n65
n68 [label="Statement:sys.out"];
n69 [label="<INTEGER_LITERAL>:1"];
n68 -> n69
n64 -> n68
n70 [label="Statement:sys.out"];
n71 [label="<INTEGER_LITERAL>:0"];
n70 -> n71
n64 -> n70
n24 -> n64
n72 [label="Statement:if"];
n73 [label="Expression list:Search"];
n74 [label="Expression:THIS"];
n73 -> n74
n75 [label="<INTEGER_LITERAL>:38"];
n73 -> n75
n72 -> n73
n76 [label="Statement:sys.out"];
n77 [label="<INTEGER_LITERAL>:1"];
n76 -> n77
n72 -> n76
n78 [label="Statement:sys.out"];
n79 [label="<INTEGER_LITERAL>:0"];
n78 -> n79
n72 -> n78
n24 -> n72
n80 [label="Statement:if"];
n81 [label="Expression list:Search"];
n82 [label="Expression:THIS"];
n81 -> n82
n83 [label="<INTEGER_LITERAL>:39"];
n81 -> n83
n80 -> n81
n84 [label="Statement:sys.out"];
n85 [label="<INTEGER_LITERAL>:1"];
n84 -> n85
n80 -> n84
n86 [label="Statement:sys.out"];
n87 [label="<INTEGER_LITERAL>:0"];
n86 -> n87
n80 -> n86
n24 -> n80
n88 [label="Statement:if"];
n89 [label="Expression list:Search"];
n90 [label="Expression:THIS"];
n89 -> n90
n91 [label="<INTEGER_LITERAL>:50"];
n89 -> n91
n88 -> n89
n92 [label="Statement:sys.out"];
n93 [label="<INTEGER_LITERAL>:1"];
n92 -> n93
n88 -> n92
n94 [label="Statement:sys.out"];
n95 [label="<INTEGER_LITERAL>:0"];
n94 -> n95
n88 -> n94
n24 -> n88
n15 -> n24
n96 [label="<INTEGER_LITERAL>:999"];
n15 -> n96
n14 -> n15
n97 [label="MethodDeclaration param:Search"];
n98 [label="boolean:"];
n97 -> n98
n99 [label="parameter list:num"];
n100 [label="<INTEGER_LITERAL>:"];
n99 -> n100
n97 -> n99
n101 [label="Vardeclarationlist:"];
n102 [label="VarDeclaration:bs01"];
n103 [label="boolean:"];
n102 -> n103
n101 -> n102
n104 [label="VarDeclaration:right"];
n105 [label="<INTEGER_LITERAL>:"];
n104 -> n105
n101 -> n104
n106 [label="VarDeclaration:left"];
n107 [label="<INTEGER_LITERAL>:"];
n106 -> n107
n101 -> n106
n108 [label="VarDeclaration:var_cont"];
n109 [label="boolean:"];
n108 -> n109
n101 -> n108
n110 [label="VarDeclaration:medium"];
n111 [label="<INTEGER_LITERAL>:"];
n110 -> n111
n101 -> n110
n112 [label="VarDeclaration:aux01"];
n113 [label="<INTEGER_LITERAL>:"];
n112 -> n113
n101 -> n112
n114 [label="VarDeclaration:nt"];
n115 [label="<INTEGER_LITERAL>:"];
n114 -> n115
n101 -> n114
n97 -> n101
n116 [label="Statementlist:"];
n117 [label="Statement assign:aux01"];
n118 [label="<INTEGER_LITERAL>:0"];
n117 -> n118
n116 -> n117
n119 [label="Statement assign:bs01"];
n120 [label="Expression:FALSE"];
n119 -> n120
n116 -> n119
n121 [label="Statement assign:right"];
n122 [label="identifier:number"];
n121 -> n122
n116 -> n121
n123 [label="Statement assign:right"];
n124 [label="Expression:subtract"];
n125 [label="identifier:right"];
n124 -> n125
n126 [label="<INTEGER_LITERAL>:1"];
n124 -> n126
n123 -> n124
n116 -> n123
n127 [label="Statement assign:left"];
n128 [label="<INTEGER_LITERAL>:0"];
n127 -> n128
n116 -> n127
n129 [label="Statement assign:var_cont"];
n130 [label="Expression:TRUE"];
n129 -> n130
n116 -> n129
n131 [label="Statement:while"];
n132 [label="identifier:var_cont"];
n131 -> n132
n133 [label="Statement:"];
n134 [label="Statementlist:"];
n135 [label="Statement assign:medium"];
n136 [label="Expression:ADD"];
n137 [label="identifier:left"];
n136 -> n137
n138 [label="identifier:right"];
n136 -> n138
n135 -> n136
n134 -> n135
n139 [label="Statement assign:medium"];
n140 [label="Expression list:Div"];
n141 [label="Expression:THIS"];
n140 -> n141
n142 [label="identifier:medium"];
n140 -> n142
n139 -> n140
n134 -> n139
n143 [label="Statement assign:aux01"];
n144 [label="Expression():"];
n145 [label="identifier:number"];
n144 -> n145
n146 [label="identifier:medium"];
n144 -> n146
n143 -> n144
n134 -> n143
n147 [label="Statement:if"];
n148 [label="Expression:less than"];
n149 [label="identifier:num"];
n148 -> n149
n150 [label="identifier:aux01"];
n148 -> n150
n147 -> n148
n151 [label="Statement assign:right"];
n152 [label="Expression:subtract"];
n153 [label="identifier:medium"];
n152 -> n153
n154 [label="<INTEGER_LITERAL>:1"];
n152 -> n154
n151 -> n152
n147 -> n151
n155 [label="Statement assign:left"];
n156 [label="Expression:ADD"];
n157 [label="identifier:medium"];
n156 -> n157
n158 [label="<INTEGER_LITERAL>:1"];
n156 -> n158
n155 -> n156
n147 -> n155
n134 -> n147
n159 [label="Statement:if"];
n160 [label="Expression list:Compare"];
n161 [label="Expression:THIS"];
n160 -> n161
n162 [label="Expressionlist:"];
n163 [label="identifier:aux01"];
n162 -> n163
n164 [label="identifier:num"];
n162 -> n164
n160 -> n162
n159 -> n160
n165 [label="Statement assign:var_cont"];
n166 [label="Expression:FALSE"];
n165 -> n166
n159 -> n165
n167 [label="Statement assign:var_cont"];
n168 [label="Expression:TRUE"];
n167 -> n168
n159 -> n167
n134 -> n159
n169 [label="Statement:if"];
n170 [label="Expression:less than"];
n171 [label="identifier:right"];
n170 -> n171
n172 [label="identifier:left"];
n170 -> n172
n169 -> n170
n173 [label="Statement assign:var_cont"];
n174 [label="Expression:FALSE"];
n173 -> n174
n169 -> n173
n175 [label="Statement assign:nt"];
n176 [label="<INTEGER_LITERAL>:0"];
n175 -> n176
n169 -> n175
n134 -> n169
n133 -> n134
n131 -> n133
n116 -> n131
n177 [label="Statement:if"];
n178 [label="Expression list:Compare"];
n179 [label="Expression:THIS"];
n178 -> n179
n180 [label="Expressionlist:"];
n181 [label="identifier:aux01"];
n180 -> n181
n182 [label="identifier:num"];
n180 -> n182
n178 -> n180
n177 -> n178
n183 [label="Statement assign:bs01"];
n184 [label="Expression:TRUE"];
n183 -> n184
n177 -> n183
n185 [label="Statement assign:bs01"];
n186 [label="Expression:FALSE"];
n185 -> n186
n177 -> n185
n116 -> n177
n97 -> n116
n187 [label="identifier:bs01"];
n97 -> n187
n14 -> n97
n188 [label="MethodDeclaration param:Div"];
n189 [label="<INTEGER_LITERAL>:"];
n188 -> n189
n190 [label="parameter list:num"];
n191 [label="<INTEGER_LITERAL>:"];
n190 -> n191
n188 -> n190
n192 [label="Vardeclarationlist:"];
n193 [label="VarDeclaration:count01"];
n194 [label="<INTEGER_LITERAL>:"];
n193 -> n194
n192 -> n193
n195 [label="VarDeclaration:count02"];
n196 [label="<INTEGER_LITERAL>:"];
n195 -> n196
n192 -> n195
n197 [label="VarDeclaration:aux03"];
n198 [label="<INTEGER_LITERAL>:"];
n197 -> n198
n192 -> n197
n188 -> n192
n199 [label="Statementlist:"];
n200 [label="Statement assign:count01"];
n201 [label="<INTEGER_LITERAL>:0"];
n200 -> n201
n199 -> n200
n202 [label="Statement assign:count02"];
n203 [label="<INTEGER_LITERAL>:0"];
n202 -> n203
n199 -> n202
n204 [label="Statement assign:aux03"];
n205 [label="Expression:subtract"];
n206 [label="identifier:num"];
n205 -> n206
n207 [label="<INTEGER_LITERAL>:1"];
n205 -> n207
n204 -> n205
n199 -> n204
n208 [label="Statement:while"];
n209 [label="Expression:less than"];
n210 [label="identifier:count02"];
n209 -> n210
n211 [label="identifier:aux03"];
n209 -> n211
n208 -> n209
n212 [label="Statement:"];
n213 [label="Statementlist:"];
n214 [label="Statement assign:count01"];
n215 [label="Expression:ADD"];
n216 [label="identifier:count01"];
n215 -> n216
n217 [label="<INTEGER_LITERAL>:1"];
n215 -> n217
n214 -> n215
n213 -> n214
n218 [label="Statement assign:count02"];
n219 [label="Expression:ADD"];
n220 [label="identifier:count02"];
n219 -> n220
n221 [label="<INTEGER_LITERAL>:2"];
n219 -> n221
n218 -> n219
n213 -> n218
n212 -> n213
n208 -> n212
n199 -> n208
n188 -> n199
n222 [label="identifier:count01"];
n188 -> n222
n14 -> n188
n223 [label="MethodDeclaration param:Compare"];
n224 [label="boolean:"];
n223 -> n224
n225 [label="parameterlist:num1"];
n226 [label="<INTEGER_LITERAL>:"];
n225 -> n226
n227 [label="parameter list:num2"];
n228 [label="<INTEGER_LITERAL>:"];
n227 -> n228
n225 -> n227
n223 -> n225
n229 [label="Vardeclarationlist:"];
n230 [label="VarDeclaration:retval"];
n231 [label="boolean:"];
n230 -> n231
n229 -> n230
n232 [label="VarDeclaration:aux02"];
n233 [label="<INTEGER_LITERAL>:"];
n232 -> n233
n229 -> n232
n223 -> n229
n234 [label="Statementlist:"];
n235 [label="Statement assign:retval"];
n236 [label="Expression:FALSE"];
n235 -> n236
n234 -> n235
n237 [label="Statement assign:aux02"];
n238 [label="Expression:ADD"];
n239 [label="identifier:num2"];
n238 -> n239
n240 [label="<INTEGER_LITERAL>:1"];
n238 -> n240
n237 -> n238
n234 -> n237
n241 [label="Statement:if"];
n242 [label="Expression:less than"];
n243 [label="identifier:num1"];
n242 -> n243
n244 [label="identifier:num2"];
n242 -> n244
n241 -> n242
n245 [label="Statement assign:retval"];
n246 [label="Expression:FALSE"];
n245 -> n246
n241 -> n245
n247 [label="Statement:if"];
n248 [label="Expression:NOT"];
n249 [label="Expression:param"];
n250 [label="Expression:less than"];
n251 [label="identifier:num1"];
n250 -> n251
n252 [label="identifier:aux02"];
n250 -> n252
n249 -> n250
n248 -> n249
n247 -> n248
n253 [label="Statement assign:retval"];
n254 [label="Expression:FALSE"];
n253 -> n254
n247 -> n253
n255 [label="Statement assign:retval"];
n256 [label="Expression:TRUE"];
n255 -> n256
n247 -> n255
n241 -> n247
n234 -> n241
n223 -> n234
n257 [label="identifier:retval"];
n223 -> n257
n14 -> n223
n258 [label="MethodDeclaration:Print"];
n259 [label="<INTEGER_LITERAL>:"];
n258 -> n259
n260 [label="Vardeclarationlist:"];
n261 [label="VarDeclaration:j"];
n262 [label="<INTEGER_LITERAL>:"];
n261 -> n262
n260 -> n261
n258 -> n260
n263 [label="Statementlist:"];
n264 [label="Statement assign:j"];
n265 [label="<INTEGER_LITERAL>:1"];
n264 -> n265
n263 -> n264
n266 [label="Statement:while"];
n267 [label="Expression:less than"];
n268 [label="identifier:j"];
n267 -> n268
n269 [label="Expression:param"];
n270 [label="identifier:size"];
n269 -> n270
n267 -> n269
n266 -> n267
n271 [label="Statement:"];
n272 [label="Statementlist:"];
n273 [label="Statement:sys.out"];
n274 [label="Expression():"];
n275 [label="identifier:number"];
n274 -> n275
n276 [label="identifier:j"];
n274 -> n276
n273 -> n274
n272 -> n273
n277 [label="Statement assign:j"];
n278 [label="Expression:ADD"];
n279 [label="identifier:j"];
n278 -> n279
n280 [label="<INTEGER_LITERAL>:1"];
n278 -> n280
n277 -> n278
n272 -> n277
n271 -> n272
n266 -> n271
n263 -> n266
n281 [label="Statement:sys.out"];
n282 [label="<INTEGER_LITERAL>:99999"];
n281 -> n282
n263 -> n281
n258 -> n263
n283 [label="<INTEGER_LITERAL>:0"];
n258 -> n283
n14 -> n258
n284 [label="MethodDeclaration param:Init"];
n285 [label="<INTEGER_LITERAL>:"];
n284 -> n285
n286 [label="parameter list:sz"];
n287 [label="<INTEGER_LITERAL>:"];
n286 -> n287
n284 -> n286
n288 [label="Vardeclarationlist:"];
n289 [label="VarDeclaration:j"];
n290 [label="<INTEGER_LITERAL>:"];
n289 -> n290
n288 -> n289
n291 [label="VarDeclaration:k"];
n292 [label="<INTEGER_LITERAL>:"];
n291 -> n292
n288 -> n291
n293 [label="VarDeclaration:aux02"];
n294 [label="<INTEGER_LITERAL>:"];
n293 -> n294
n288 -> n293
n295 [label="VarDeclaration:aux01"];
n296 [label="<INTEGER_LITERAL>:"];
n295 -> n296
n288 -> n295
n284 -> n288
n297 [label="Statementlist:"];
n298 [label="Statement assign:size"];
n299 [label="identifier:sz"];
n298 -> n299
n297 -> n298
n300 [label="Statement assign:number"];
n301 [label="Expression:NEW INT"];
n302 [label="identifier:sz"];
n301 -> n302
n300 -> n301
n297 -> n300
n303 [label="Statement assign:j"];
n304 [label="<INTEGER_LITERAL>:1"];
n303 -> n304
n297 -> n303
n305 [label="Statement assign:k"];
n306 [label="Expression:ADD"];
n307 [label="identifier:size"];
n306 -> n307
n308 [label="<INTEGER_LITERAL>:1"];
n306 -> n308
n305 -> n306
n297 -> n305
n309 [label="Statement:while"];
n310 [label="Expression:less than"];
n311 [label="identifier:j"];
n310 -> n311
n312 [label="Expression:param"];
n313 [label="identifier:size"];
n312 -> n313
n310 -> n312
n309 -> n310
n314 [label="Statement:"];
n315 [label="Statementlist:"];
n316 [label="Statement assign:aux01"];
n317 [label="Expression:multiplication"];
n318 [label="<INTEGER_LITERAL>:2"];
n317 -> n318
n319 [label="identifier:j"];
n317 -> n319
n316 -> n317
n315 -> n316
n320 [label="Statement assign:aux02"];
n321 [label="Expression:subtract"];
n322 [label="identifier:k"];
n321 -> n322
n323 [label="<INTEGER_LITERAL>:3"];
n321 -> n323
n320 -> n321
n315 -> n320
n324 [label="Statementlist assign:number"];
n325 [label="identifier:j"];
n324 -> n325
n326 [label="Expression:ADD"];
n327 [label="identifier:aux01"];
n326 -> n327
n328 [label="identifier:aux02"];
n326 -> n328
n324 -> n326
n315 -> n324
n329 [label="Statement assign:j"];
n330 [label="Expression:ADD"];
n331 [label="identifier:j"];
n330 -> n331
n332 [label="<INTEGER_LITERAL>:1"];
n330 -> n332
n329 -> n330
n315 -> n329
n333 [label="Statement assign:k"];
n334 [label="Expression:subtract"];
n335 [label="identifier:k"];
n334 -> n335
n336 [label="<INTEGER_LITERAL>:1"];
n334 -> n336
n333 -> n334
n315 -> n333
n314 -> n315
n309 -> n314
n297 -> n309
n284 -> n297
n337 [label="<INTEGER_LITERAL>:0"];
n284 -> n337
n14 -> n284
n8 -> n14
n7 -> n8
n0 -> n7
}
